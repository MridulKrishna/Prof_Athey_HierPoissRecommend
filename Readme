Hierarchical Poisson factorization with observed characteristics
----------------------------------------------------------------

**hgaprec** [OPTIONS]

-dir <string>       path to dataset directory with 5 files: train.tsv, test.tsv,
                    validation.tsv, itemObs.tsv, userObs.tsv.

-outdir <string>    path to directory where output files will be written

-m <int>	  number of items
-n <int>	  number of users
-k <int>	  number of factors
-uc <int>       number of user characteristics
-ic <int>       number of item characteristics

-seed <int>     Set random seed. Default: 0

-a
-ap
-bp         Set hyperparameters
-c          Default: ap = cp = 1.5
-cp         a = bp = c = dp = e = f = 0.3
-dp
-e
-f

-rfreq <int>    Frequency for evaluating convergence and producing output.
                Default: 10

-max-iterations <int> Maximum number of iterations. Default: 1000

-nooffset       Run the code with no offset for the priors. Useful when testing and
                comparing with matlab code

-offset<double> Factor to multiply the random offset.

-std            Scale down observables by their standard deviation, instead of by
                their mean

-ones           Do not scale down observables by their standard deviation (i.e.,
                scale them down by a vector of ones)

-scfact<double> Artificially scale down observables by an additional factor

-lfirst         Run 100 iterations in which only the purely latent variables are
                updated (i.e., theta and beta)

-ofirst         Run 100 iterations in which only the variables that multiply
                observables are updated (i.e., sigma and rho)

-session        If the train, validation, and test sets include a session id in the
                second column. In that case, the code just ignores that column and
                reads the rest of the file.

-fitpriors      Fit the prior values of bp and dp so that under those priors the
                rate of the Poisson r.v. is the average rating


Example script
--------------

The file run.sh is an example of a script use to run the code. It runs with the
yogurt data inclued in the Yogurt/observables folder. Make sure to modify the paths
so they lead to the actual addresses of the folder.


Yogurt data
-----------

The original data are in file bigpurchfile.dat, with the variable names and codes
deeply hidden in the fortran code in Yogurt/yogurt. An easier version of the code is
purchases.dta, in stata format, with brand and flavor codes in flavors.tsv and
brands.tsv.

toHPFOformat.do converts purchases.dta into the format required by the c++ code. The
rest of the files are some descriptive statistics of the data, as well as some
conversions to the format required to run the data through other programs.





